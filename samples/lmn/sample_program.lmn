# file: 09_mix_features.lmn

# A simple function 'foo' that takes one integer param 'n' and returns 2*n
function foo(n: int)
    return n * 2
end

# Another function that takes a typed array of int.
# Since 'for' loops aren't implemented yet, we'll just return 0 for now.
function typedDouble(nums: int[])
    # Future: you could sum or process 'nums' if you had loops / indexing
    return 0
end

function main()
    # 1) A simple string with an emoji and some escapes
    let greeting = "Hello\n🌍 \"Earth\"!"

    # Print it
    print greeting

    # 2) A JSON object literal (untyped => 'json')
    let user = {
        "name": "Alice",
        "age": 42,
        "languages": ["English", "Spanish"],
        "active": true
    }
    print "User data:" user

    # 3) A strict JSON array => 'json'
    let colors = [ "red", "green", "blue" ]
    print "Colors array:" colors

    # 4) A typed array of int. No 'for' loop to process it, but we can pass it to typedDouble(...)
    let typedNums: int[] = [1, 2, 3, 10]
    print "typedNums is" typedNums
    print "typedDouble(typedNums) =>" typedDouble(typedNums)

    # 5) A native array with arbitrary expressions (untyped => 'any[]' or 'array')
    #    includes an arithmetic expr (2+3) and a call to foo(7)
    let myArray = [ 1, 2+3, foo(7), greeting ]
    print "Native array with expressions:" myArray
end
