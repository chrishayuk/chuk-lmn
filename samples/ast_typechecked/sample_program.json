{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDefinition",
      "name": "hello_llm",
      "params": [
        {
          "type": "FunctionParameter",
          "name": "message"
        }
      ],
      "body": [
        {
          "type": "LetStatement",
          "variable": {
            "inferred_type": "string",
            "type": "VariableExpression",
            "name": "result"
          },
          "expression": {
            "inferred_type": "string",
            "type": "FnExpression",
            "name": {
              "type": "VariableExpression",
              "name": "llm"
            },
            "arguments": [
              {
                "type": "VariableExpression",
                "name": "message"
              },
              {
                "inferred_type": "string",
                "type": "LiteralExpression",
                "value": "llama3.2",
                "literal_type": "string"
              }
            ]
          },
          "inferred_type": "string"
        },
        {
          "type": "ReturnStatement",
          "expression": {
            "inferred_type": "string",
            "type": "VariableExpression",
            "name": "result"
          },
          "inferred_type": "string"
        }
      ],
      "return_type": "string"
    },
    {
      "type": "LetStatement",
      "variable": {
        "type": "VariableExpression",
        "name": "y"
      },
      "expression": {
        "type": "FnExpression",
        "name": {
          "type": "VariableExpression",
          "name": "hello_llm"
        },
        "arguments": [
          {
            "inferred_type": "string",
            "type": "LiteralExpression",
            "value": "write a limerick about cheese",
            "literal_type": "string"
          }
        ]
      }
    },
    {
      "type": "PrintStatement",
      "expressions": [
        {
          "type": "VariableExpression",
          "name": "y"
        }
      ],
      "inferred_type": "void"
    },
    {
      "type": "LetStatement",
      "variable": {
        "type": "VariableExpression",
        "name": "z"
      },
      "expression": {
        "type": "FnExpression",
        "name": {
          "type": "VariableExpression",
          "name": "hello_llm"
        },
        "arguments": [
          {
            "inferred_type": "string",
            "type": "LiteralExpression",
            "value": "hello",
            "literal_type": "string"
          }
        ]
      }
    },
    {
      "type": "PrintStatement",
      "expressions": [
        {
          "type": "VariableExpression",
          "name": "z"
        }
      ],
      "inferred_type": "void"
    }
  ]
}