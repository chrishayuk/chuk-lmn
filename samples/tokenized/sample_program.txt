Token(LmnTokenType.FUNCTION, function)
Token(LmnTokenType.IDENTIFIER, sum)
Token(LmnTokenType.LPAREN, ()
Token(LmnTokenType.IDENTIFIER, a)
Token(LmnTokenType.COLON, :)
Token(LmnTokenType.INT, int)
Token(LmnTokenType.COMMA, ,)
Token(LmnTokenType.IDENTIFIER, b)
Token(LmnTokenType.COLON, :)
Token(LmnTokenType.INT, int)
Token(LmnTokenType.RPAREN, ))
Token(LmnTokenType.COLON, :)
Token(LmnTokenType.INT, int)
Token(LmnTokenType.LET, let)
Token(LmnTokenType.IDENTIFIER, result)
Token(LmnTokenType.COLON, :)
Token(LmnTokenType.INT, int)
Token(LmnTokenType.IDENTIFIER, result)
Token(LmnTokenType.EQ, =)
Token(LmnTokenType.IDENTIFIER, a)
Token(LmnTokenType.PLUS, +)
Token(LmnTokenType.IDENTIFIER, b)
Token(LmnTokenType.RETURN, return)
Token(LmnTokenType.IDENTIFIER, result)
Token(LmnTokenType.END, end)
Token(LmnTokenType.PRINT, print)
Token(LmnTokenType.IDENTIFIER, sum)
Token(LmnTokenType.LPAREN, ()
Token(LmnTokenType.INT_LITERAL, 10)
Token(LmnTokenType.COMMA, ,)
Token(LmnTokenType.INT_LITERAL, 20)
Token(LmnTokenType.RPAREN, ))
